name: mini-pipeline

on:
  workflow_dispatch:
  push:
    paths:
      - 'PipelineDemo/src/**'
      - 'PipelineDemo/requirements.txt'
      - '.github/workflows/mini-pipeline.yml'

permissions:
  contents: write

concurrency:
  group: mini-pipeline-${{ github.ref }}
  cancel-in-progress: true

jobs:
  mini:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: PipelineDemo/requirements.txt

      - name: (debug) verify files
        run: |
          pwd && ls -la
          test -f PipelineDemo/requirements.txt || echo "::notice::no requirements.txt — skipping pip install"
          test -f PipelineDemo/src/pipeline.py  || echo "::notice::no pipeline.py — skipping run"

      - name: Install dependencies (if present)
        if: ${{ hashFiles('PipelineDemo/requirements.txt') != '' }}
        run: pip install -r PipelineDemo/requirements.txt

      - name: Run pipeline (if present)
        if: ${{ hashFiles('PipelineDemo/src/pipeline.py') != '' }}
        run: python PipelineDemo/src/pipeline.py

      - name: Upload outputs (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mini-pipeline-outputs
          path: |
            PipelineDemo/data/processed/**
            PipelineDemo/reports/**
          if-no-files-found: ignore
          retention-days: 7

      - name: Commit generated outputs
        if: ${{ github.event_name == 'push' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: |
            PipelineDemo/data/processed
            PipelineDemo/reports
            PipelineDemo/site
          message: "ci(mini): update mini-pipeline outputs"
          default_author: github_actions
          skip_empty: true
